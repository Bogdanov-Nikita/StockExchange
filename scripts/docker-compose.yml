version: '3.7'

services:

  db:
    image: postgres:16.1
    command: postgres -c 'max_connections=2000'
    volumes:
      - ./database:/var/lib/postgresql/data
    ports:
      #На локальной машине стоит постгрес по этому пока маппируем в 5555
      - "5555:5432"
    environment:
      POSTGRES_DB: "profile"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
    healthcheck:
      #Пока оставим чтобы проверял что там есть корневая база
      test: ["CMD-SHELL", "pg_isready -U postgres -d profile | grep -w 'accepting connections' || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 5s
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
    container_name: database-container
    restart: on-failure

  profile:
    build:
      context: ./..
      dockerfile: ./scripts/profile/Dockerfile
    container_name: profile-container
    ports:
      - "8080:8080"
#    depends_on:
#      db:
#        condition: service_healthy

  prometheus:
    image: prom/prometheus
    container_name: prometheus-container
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus/
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    restart: always

  grafana:
    build: 'grafana'
    network_mode: host
    container_name: grafana-container
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin